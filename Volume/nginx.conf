server {
     listen 80;
     listen [::]:80;
     server_name shops.witpakulii.de;

     location / {
         return 301 https://$server_name$request_uri;
     }
     location /backend {
         return 301 https://$server_name$request_uri;
     }

 }

server {
    listen 443 ssl http2; 
    listen [::]:443 ssl http2; 
    server_name shops.witpakulii.de;

    ssl_certificate /etc/nginx/conf.d/signed_cert_plus_intermediates ; 
    ssl_certificate_key /etc/nginx/conf.d/private_key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam 
    ssl_dhparam /etc/nginx/conf.d/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # replace with the IP address of your resolver
    resolver 127.0.0.1;
   
     client_max_body_size 100M;

     location / {
         proxy_pass http://frontend/;
     }

     location /backend {
         proxy_pass http://backend:4000/;
         proxy_set_header Host $host;
     }

}